name: Build and Deploy Gradle Project
on:
  push:
    branches: [ "ver2" ]
  pull_request:
    branches: [ "ver2" ]

jobs:
  build-and-deploy:
    name: Build and Deploy to AWS EC2
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: '8.3'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Deploy to EC2 instances
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      run: |
        echo "$PRIVATE_KEY" | tee /tmp/aws-insurance-service-1.pem > /dev/null
        chmod 600 /tmp/aws-insurance-service-1.pem

        scp -i /tmp/aws-insurance-service-1.pem -o StrictHostKeyChecking=no build/libs/insurance-service-0.0.1-SNAPSHOT.jar ubuntu@13.125.148.26:/home/ubuntu/
        ssh -i /tmp/aws-insurance-service-1.pem -o StrictHostKeyChecking=no ubuntu@13.125.148.26 << 'EOF'
        pkill -f 'insurance-service-0.0.1-SNAPSHOT.jar' || true
        nohup java -jar /home/ubuntu/insurance-service-0.0.1-SNAPSHOT.jar 

        scp -i /tmp/aws-insurance-service-1.pem -o StrictHostKeyChecking=no build/libs/insurance-service-0.0.1-SNAPSHOT.jar ubuntu@3.35.170.99:/home/ubuntu/
        ssh -i /tmp/aws-insurance-service-1.pem -o StrictHostKeyChecking=no ubuntu@3.35.170.99 << 'EOF'
        pkill -f 'insurance-service-0.0.1-SNAPSHOT.jar' || true
        nohup java -jar /home/ubuntu/insurance-service-0.0.1-SNAPSHOT.jar 
